.TH neunet 1

.SH NAME
neunet \- Neural network training and prediction

.SH SYNOPSIS
.PP
.B neunet
.RB [ --version ]
.RB [ --help ]
.RI < command >
.RI < arch >
.RI [ OPTIONS ]
.RI [ FILE ]

.SH DESCRIPTION
.PP
Neural Network implementation with regularization, mini-batch gradient descent and an arbitrary number of layers. <\fIcommand\fR> can be "learn" for training the weights of a neural network or "solve" for predicting new values using the trained weights. <\fIarch\fR> is a comma separated list of integers indicating the architecture of the neural network. For example, "10,5,5,1" would use a network consisting of 10 input nodes, 5 nodes in the first and second hidden layers, and 1 output node.

.SH COMMANDS
.TP
.BR neunet-learn (1)
Learn the weights of a neural network from a training dataset.
.TP
.BR neunet-solve (1)
Predict output values from input data given a set of pre-trained weights.

.SH EXAMPLES
Learn weights:
.PP
.nf
.RS
neunet learn 784,30,10 mnist_train.txt > mnist.wts
.RE
.fi
.PP
Predict new values:
.PP
.nf
.RS
neunet solve 784,30,10 --weights=mnist.wts mnist_test.txt > mnist.txt
.RE
.fi
.PP

.SH AUTHORS
Michael Stocks <mestocks@protonmail.com>
